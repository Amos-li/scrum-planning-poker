// https://github.com/YLiuEric/Weapp-Demo-Inputbox

<style lang="less">
  .input-box-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 750rpx;
    height: 100vh;
    z-index: 20161127;
  }

  .shadow {
    position: absolute;
    top: 0;
    left: 0;
    background-color: black;
    width: 750rpx;
    height: 100vh;
    z-index: 20161127;
  }

  .modal {
    display: flex;
    flex-direction: column;
    position: absolute;
    left: 65rpx;
    background-color: white;
    width: 620rpx;
    border-radius: 9rpx;
    z-index: 20170510;
  }

  .title {
    position: relative;
    bottom: -46rpx;
    text-align: center;
    font-size: 34rpx;
    font-weight: 410;
  }

  .singleline-input {
    position: absolute;
    top: 130rpx;
    align-self: center;
    background-color: #eee;
    width: 480rpx;
    height: 80rpx;
    padding: 0 12rpx;
    border-radius: 4rpx;
    font-size: 30rpx;
  }

  .multiline-input {
    position: absolute;
    top: 130rpx;
    align-self: center;
    background-color: #eee;
    width: 490rpx;
    height: 195rpx;
    padding: 3rpx 5rpx;
    border-radius: 4rpx;
    font-size: 30rpx;
  }

  .cancel-container {
    position: absolute;
    left: 0;
    bottom: 0;
    width: 310rpx;
    height: 95rpx;
    border-top: 1rpx solid #dcdcdc;
  }

  .cancel-container:active {
    background-color: #eee;
  }

  .cancel {
    position: absolute;
    left: 120rpx;
    bottom: 22rpx;
    font-size: 36rpx;
  }

  .confirm-container {
    position: absolute;
    right: 0;
    bottom: 0;
    width: 310rpx;
    height: 95rpx;
    border-top: 1rpx solid #dcdcdc;
    border-left: 1rpx solid #dcdcdc;
  }

  .confirm-container:active {
    background-color: #eee;
  }

  .confirm {
    position: absolute;
    right: 120rpx;
    bottom: 22rpx;
    font-size: 36rpx;
    color: #3CC51F;
  }

  @keyframes shadowDisplay {
    0% {
      opacity: 0;
    }

    100% {
      opacity: 0.65;
    }
  }

  @keyframes modalDisplay {
    0% {
      opacity: 0;
    }

    100% {
      opacity: 1;
    }
  }

  @keyframes shadowHide {
    0% {
      opacity: 0.65;
    }

    100% {
      opacity: 0;
    }
  }

  @keyframes modalHide {
    0% {
      opacity: 1;
    }

    100% {
      opacity: 0;
    }
  }
</style>

<template>
<view wx:if="{{show}}" class="input-box-container" @tap="tapCatcher">
  <view class="shadow" style="opacity:{{ shadowOpacity }};animation:{{ shadowAnimation }} 0.35s;" />
  <view class="modal" style="bottom:{{ modalBottom }}rpx;height:{{ modalHeight }}rpx;opacity:{{ modalOpacity }};animation:{{ modalAnimation }} 0.35s;">
    <text class="title">{{ title }}</text>
    <input class="singleline-input" value="{{text}}" @input="onInput" placeholder="{{ placeholder }}" cursor-spacing="150" maxlength="{{ maxlength }}" wx:if="{{ !multiline }}" />
    <textarea class="multiline-input" value="{{text}}" @input="onInput" placeholder="{{ placeholder }}" maxlength="{{ maxlength }}" cursor-spacing="175" wx:if="{{ multiline }}" />
    <view class="cancel-container" @tap="onCancelTap">
      <view class="cancel">{{ cancelText }}</view>
    </view>
    <view class="confirm-container" @tap="onConfirmTap">
      <view class="confirm">{{ confirmText }}</view>
    </view>
  </view>
</view>
</template>

<script>
import wepy from 'wepy';
import T from '@/utils/i18n';

export default class InputBox extends wepy.component {
  data = {
    multiline: false,
    title: '',
    placeholder: '',
    maxlength: 140,
    modalBottom: '',
    modalHeight: '',
    text: '',
    show: false,
    confirmColor: '#0678c1',
    confirmText: '确认',
    cancelText: '取消',
    confirmEvent: 'inputConfirm',
    cancelEvent: 'inputCancel',
    shadowAnimation: 'shadowDisplay',
    modalAnimation: 'modalDisplay',
    shadowOpacity: '0.65',
    modalOpacity: '1'
  };

  methods = {
    async show(data = {}) {
      const { screenHeight } = await wepy.getSystemInfo();
      Object.assign(this, data, {
        show: true,
        text: data.text || '',
        confirmColor: data.confirmColor || '#0678c1',
        confirmText: data.confirmText || T._('common.button.confirm'),
        confirmEvent: data.confirmEvent || 'inputConfirm',
        cancelText: data.cancelText || T._('common.button.cancel'),
        cancelEvent: data.cancelEvent || 'inputCancel',
        modalBottom: data.multiline ? (screenHeight - 234).toString() : (screenHeight - 178).toString(),
        modalHeight: data.multiline ? '468' : '355',
        shadowAnimation: 'shadowDisplay',
        modalAnimation: 'modalDisplay',
        shadowOpacity: '0.65',
        modalOpacity: '1'
      });
      this.$apply();
    },

    // 监听用户输入
    onInput(e) {
      this.text = e.detail.value;
    },

    // 单击取消事件
    onCancelTap() {
      this.hideInputBox();
      this.$emit(this.cancelEvent);
      setTimeout(() => {
        this.show = false;
        this.$apply();
      }, 350);
    },

    // 单击确定事件
    onConfirmTap() {
      this.hideInputBox();
      this.$emit(this.confirmEvent, this.text);
      setTimeout(() => {
        this.show = false;
        this.$apply();
      }, 350);
    },

    // 捕获背景的点击事件以防止冒泡
    tapCatcher() { }
  };

  showInputBox() {
    this.shadowAnimation = 'shadowDisplay';
    this.modalAnimation = 'modalDisplay';
    this.shadowOpacity = '0.65';
    this.modalOpacity = '1';
  }

  // 隐藏输入框
  hideInputBox() {
    this.shadowAnimation = 'shadowHide';
    this.modalAnimation = 'modalHide';
    this.shadowOpacity = '0';
    this.modalOpacity = '0';
  }
}
</script>
